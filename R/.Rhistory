k.penalty=4,
verbose=T)
source('~/PycharmProjects/NormativeModellingPsychosis/gamlss/VBGAMLSS/R/Core.R')
source('~/PycharmProjects/NormativeModellingPsychosis/gamlss/VBGAMLSS/R/Support.R')
source('~/PycharmProjects/NormativeModellingPsychosis/gamlss/VBGAMLSS/R/Utilities.R')
source('~/PycharmProjects/NormativeModellingPsychosis/gamlss/VBGAMLSS/R/Cross_validation.R')
source('~/PycharmProjects/NormativeModellingPsychosis/gamlss/VBGAMLSS/R/Mapping.R')
library(gamlss)
library(gamlss2)
library(ANTsR)
library(itertools)
library(progressr)
library(pbmcapply)
library(doFuture)
library(splitTools)
options(parallelly.localhost.hostname = "127.0.0.1")
### test ### https://cran.r-project.org/web/packages/voxel/voxel.pdf
image <- '/home/localadmin/PycharmProjects/NormativeModellingPsychosis/gamlss/tests/funneled_mod.nii.gz'
mask <- '/home/localadmin/PycharmProjects/NormativeModellingPsychosis/gamlss/tests/vol.0_mask.nii.gz'
set.seed(1)
nsubj <- 258
covs <- data.frame(x = 1:258, x1 = rnorm(nsubj)*runif(nsubj), x2 = rnorm(nsubj))
covs2 <- data.frame(x = rnorm(nsubj), x1 = rnorm(nsubj)*rnorm(nsubj), x2 = rnorm(nsubj))
fm1 <- "Y ~ x"
models <- vbgamlss_chunks(image=image,
mask=mask,
g.formula=fm1,
g.family=NO,
train.data=covs)
library(latex2exp)
library(ggstatsplot)
library(ggridges)
library(patchwork)
library(ggplot2)
library(plyr)
library(tidyverse)
library(gridExtra)
library(gtable)
library(ggpubr)
library(modelsummary)
library(car)
library(ggcorrplot)
library(ggeffects)
library(broom)
library(multcomp)
library(stargazer)
library(emmeans)
library(gtExtras)
library(ggnewscale)
library(gridExtra)
source("/home/localadmin/PycharmProjects/LausannePsychosisVBA/paper_blood_biom/NicePalettes.R")
source("/home/localadmin/PycharmProjects/LausannePsychosisVBA/paper_blood_biom/paper_plots.R")
CW4 <- c("#2c4a8f",
"#8bc0ff",
"#cf2c27",
"#8e0a04"
)
CW5 <- c("#2c4a8f",
"#8bc0ff",
"#9d9d9d",
"#cf2c27",
"#8e0a04"
)
CW2 <- c("#cf2c27","#8bc0ff")
CWC3 <- c("#cf2c27","#8bc0ff", "#e7e055") # green: #71cf7c, brown: #cf6727, yellow: #e7e055
signif.star <- function(x) {symnum(x, corr = FALSE, na = FALSE, legend = FALSE,
cutpoints = c(0, 1e-04, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns"))}
p.star <- function(x) {paste(prettyNum(x, digits=2), signif.star(x), sep='')}
ep.star <- function(x) {paste(formatC(x, format = "e", digits = 1), signif.star(x), sep='')}
p.cell <- function(a, b) {paste("p=", ep.star(b), sep='')}
sp.cell <- function(a, b) {c(paste('W', a, sep='='), paste("p=", ep.star(b), sep=''))}
control_by_biom <- function(fit_data_res, vars="ageM + sex", from_ctrl=T){
for (ic in seq_along(c('new_gpx', 'new_gred', 'new_gratio'))){
coi <- c('new_gpx', 'new_gred', 'new_gratio')[ic]
dt <- fit_data_res #%>% subset(select=c(coi, strsplit(vars, split = " \\+ ")[[1]], 'group'))
colnames(dt)[colnames(dt)==coi] <-'coi'
# fit model
if (from_ctrl){
dt_ctrl <- dt[dt$clin == 'HC',]
dt_clin <- dt[dt$clin != 'HC',]
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt_ctrl, na.action=na.exclude)
fit_data_res[fit_data_res$clin == 'HC', coi] <- residuals(lm_)
fit_data_res[fit_data_res$clin != 'HC', coi] <- dt_clin['coi'] - predict(lm_, dt_clin)
} else {
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt, na.action=na.exclude)
fit_data_res[, coi] <- residuals(lm_)
}
}
return(fit_data_res)
}
control_by <- function(fit_data_res, vars="ageM + sex", from_ctrl=F, keep_intercept=T){
for (ic in seq_along(skeletons)){
coi <- skeletons[ic]
dt <- fit_data_res #%>% subset(select=c(coi, strsplit(vars, split = " \\+ ")[[1]], 'group'))
colnames(dt)[colnames(dt)==coi] <-'coi'
# fit model
if (from_ctrl){
dt_ctrl <- dt[dt$clin == 'HC',]
dt_clin <- dt[dt$clin != 'HC',]
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt_ctrl, na.action=na.exclude)
fit_data_res[fit_data_res$clin == 'HC', coi] <- residuals(lm_)
fit_data_res[fit_data_res$clin != 'HC', coi] <- dt_clin['coi'] - predict(lm_, dt_clin)
} else {
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt, na.action=na.exclude)
fit_data_res[, coi] <- residuals(lm_)
if (keep_intercept){
fit_data_res[, coi] <- fit_data_res[, coi] + coef(lm_)["(Intercept)"]
}
}
}
return(fit_data_res)
}
skeletons <- c("tbss_rd","tbss_md","tbss_ad","tbss_fa",
"tbss_rk","tbss_mk","tbss_ak","tbss_f",
"tbss_da","tbss_depar","tbss_deperp","tbss_c2")
################################################################################
#       load data
################################################################################
## import data
df <- data.frame(read.csv(file = '/home/localadmin/PycharmProjects/LausannePsychosisAnalysis/longitudinal/SUBSET_4_TBSS_PAPER_resid_df_skeletons_harmonized_noimputation_allscales_newbloodbiom_reader.csv'))
jhu <- read.csv(file = '/home/localadmin/PycharmProjects/LausannePsychosisAnalysis/R_scripts/jhu_labels_for_R.csv')
df <- subset(df, group != 'ARMS') #
## remove EP
df$clin <- df$group != 'CTRL'
df[df$clin == T, 'clin'] <- 'PT'
df[df$clin == F, 'clin'] <- 'HC'
df[df$group == 'CTRL', 'group'] <- 'HC'
df[df$group == 'SCHZ', 'group'] <- 'SZ'
## subset, remove NA
df <- df[df$closest_scan_biom_date=='True',]
#keep only skeletons
roi <- jhu$long_corrected[30]
df <- df %>% subset(label == roi)
df$lowratio = 'High'
df$lowratio[df$harm_gratio < quantile(df$harm_gratio[df$clin=='HC'], na.rm=T)[3]] = 'Low' # 6.639423
df$lowgpx = 'High'
df$lowgpx[df$harm_gpx < quantile(df$harm_gpx[df$clin=='HC'], na.rm=T)[3]] = 'Low'
df$lowgr = 'High'
df$lowgr[df$harm_gred < quantile(df$harm_gred[df$clin=='HC'], na.rm=T)[3]] = 'Low'
df$new_gpx <- df$harm_gpx
df$new_gred <- df$harm_gred
df$new_gratio <- df$harm_gratio
#### REMOVE SPECRO CUVE ####
df <- df[df$reader != "Spectro_cuve",]
df <- df[df$sub != 'F192', ]
###### re-level to male to see better female ######
df$sex <- relevel(as.factor(df$sex), ref='M')
df$clin <- as.factor(df$clin)
###### SUBSET FOR ISMRM #######
ISMRM_subset <- read.csv(file = '/home/localadmin/PycharmProjects/LausannePsychosisVBA/ISMRM24abstract_subset_4_old.csv')
df = (df[df$sub %in% ISMRM_subset$sub & df$ses %in% ISMRM_subset$ses ,])
library(latex2exp)
library(ggstatsplot)
library(ggridges)
library(patchwork)
library(ggplot2)
library(plyr)
library(tidyverse)
library(ggpubr)
library(modelsummary)
library(car)
library(ggcorrplot)
library(ggeffects)
library(broom)
library(multcomp)
library(stargazer)
library(gtExtras)
library(robustbase)
library(marginaleffects)
source("/home/localadmin/PycharmProjects/LausannePsychosisVBA/paper_blood_biom/paper_plots.R")
CW4 <- c("#2c4a8f",
"#8bc0ff",
"#cf2c27",
"#8e0a04"
)
CW5 <- c("#2c4a8f",
"#8bc0ff",
"#9d9d9d",
"#cf2c27",
"#8e0a04"
)
CW2 <- c("#cf2c27","#8bc0ff")
CWC3 <- c("#cf2c27","#8bc0ff", "#e7e055") # green: #71cf7c, brown: #cf6727, yellow: #e7e055
signif.star <- function(x) {symnum(x, corr = FALSE, na = FALSE, legend = FALSE,
cutpoints = c(0, 1e-04, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns"))}
p.star <- function(x) {paste(prettyNum(x, digits=2), signif.star(x), sep='')}
ep.star <- function(x) {paste(formatC(x, format = "e", digits = 1), signif.star(x), sep='')}
p.cell <- function(a, b) {paste("p=", ep.star(b), sep='')}
sp.cell <- function(a, b) {c(paste('W', a, sep='='), paste("p=", ep.star(b), sep=''))}
control_by_biom <- function(fit_data_res, vars="ageM + sex", from_ctrl=T){
for (ic in seq_along(c('new_gpx', 'new_gred', 'new_gratio'))){
coi <- c('new_gpx', 'new_gred', 'new_gratio')[ic]
dt <- fit_data_res #%>% subset(select=c(coi, strsplit(vars, split = " \\+ ")[[1]], 'group'))
colnames(dt)[colnames(dt)==coi] <-'coi'
# fit model
if (from_ctrl){
dt_ctrl <- dt[dt$clin == 'HC',]
dt_clin <- dt[dt$clin != 'HC',]
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt_ctrl, na.action=na.exclude)
fit_data_res[fit_data_res$clin == 'HC', coi] <- residuals(lm_)
fit_data_res[fit_data_res$clin != 'HC', coi] <- dt_clin['coi'] - predict(lm_, dt_clin)
} else {
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt, na.action=na.exclude)
fit_data_res[, coi] <- residuals(lm_)
}
}
return(fit_data_res)
}
control_by <- function(fit_data_res, vars="ageM + sex", from_ctrl=F, keep_intercept=T){
for (ic in seq_along(skeletons)){
coi <- skeletons[ic]
dt <- fit_data_res #%>% subset(select=c(coi, strsplit(vars, split = " \\+ ")[[1]], 'group'))
colnames(dt)[colnames(dt)==coi] <-'coi'
# fit model
if (from_ctrl){
dt_ctrl <- dt[dt$clin == 'HC',]
dt_clin <- dt[dt$clin != 'HC',]
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt_ctrl, na.action=na.exclude)
fit_data_res[fit_data_res$clin == 'HC', coi] <- residuals(lm_)
fit_data_res[fit_data_res$clin != 'HC', coi] <- dt_clin['coi'] - predict(lm_, dt_clin)
} else {
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt, na.action=na.exclude)
fit_data_res[, coi] <- residuals(lm_)
if (keep_intercept){
fit_data_res[, coi] <- fit_data_res[, coi] + coef(lm_)["(Intercept)"]
}
}
}
return(fit_data_res)
}
controljhu_by <- function(fit_data_res, vars="ageM + sex", from_ctrl=F, keep_intercept=T){
for (ic in seq_along(jhu)){
coi <- jhu[ic]
dt <- fit_data_res #%>% subset(select=c(coi, strsplit(vars, split = " \\+ ")[[1]], 'group'))
colnames(dt)[colnames(dt)==coi] <-'coi'
# fit model
if (from_ctrl){
dt_ctrl <- dt[dt$clin == 'HC',]
dt_clin <- dt[dt$clin != 'HC',]
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt_ctrl, na.action=na.exclude)
fit_data_res[fit_data_res$clin == 'HC', coi] <- residuals(lm_)
fit_data_res[fit_data_res$clin != 'HC', coi] <- dt_clin['coi'] - predict(lm_, dt_clin)
} else {
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt, na.action=na.exclude)
fit_data_res[, coi] <- residuals(lm_)
if (keep_intercept){
fit_data_res[, coi] <- fit_data_res[, coi] + coef(lm_)["(Intercept)"]
}
}
}
return(fit_data_res)
}
skeletons <- c("skeleton_rd","skeleton_md","skeleton_ad","skeleton_fa",
"skeleton_rk","skeleton_mk","skeleton_ak","skeleton_f",
"skeleton_da","skeleton_depar","skeleton_deperp","skeleton_c2")
################################################################################
#       load data
################################################################################
## import data
df <- data.frame(read.csv(file = '/home/localadmin/PycharmProjects/LausannePsychosisAnalysis/longitudinal/SUBSET_4_TBSS_PAPER_resid_df_skeletons_harmonized_noimputation_allscales_newbloodbiom_reader.csv'))
jhu <- read.csv(file = '/home/localadmin/PycharmProjects/LausannePsychosisAnalysis/R_scripts/jhu_labels_for_R.csv')
df <- subset(df, group != 'ARMS') #
## remove EP
df$clin <- df$group != 'CTRL'
df[df$clin == T, 'clin'] <- 'PT'
df[df$clin == F, 'clin'] <- 'HC'
df[df$group == 'CTRL', 'group'] <- 'HC'
df[df$group == 'SCHZ', 'group'] <- 'SZ'
## subset, remove NA
df <- df[df$closest_scan_biom_date=='True',]
df <- df[abs(df$biom_acq_delta_time) < 60,]
#keep only skeletons
roi <- jhu$long_corrected[30]
df <- df %>% subset(label == roi)
df$lowratio = 'High'
df$lowratio[df$harm_gratio < quantile(df$harm_gratio[df$clin=='HC'], na.rm=T)[3]] = 'Low' # 6.639423
df$lowgpx = 'High'
df$lowgpx[df$harm_gpx < quantile(df$harm_gpx[df$clin=='HC'], na.rm=T)[3]] = 'Low'
df$lowgr = 'High'
df$lowgr[df$harm_gred < quantile(df$harm_gred[df$clin=='HC'], na.rm=T)[3]] = 'Low'
df$new_gpx <- df$harm_gpx
df$new_gred <- df$harm_gred
df$new_gratio <- df$harm_gratio
#### REMOVE SPECRO CUVE ####
df <- df[df$reader != "Spectro_cuve",]
df <- df[df$sub != 'F192', ]
###### re-level to male to see better female ######
df$sex <- relevel(as.factor(df$sex), ref='M')
df$clin <- as.factor(df$clin)
###### SUBSET FOR ISMRM #######
ISMRM_subset <- read.csv(file = '/home/localadmin/PycharmProjects/LausannePsychosisVBA/ISMRM24abstract_subset_4_old.csv')
df = (df[df$sub %in% ISMRM_subset$sub & df$ses %in% ISMRM_subset$ses ,])
drop_over40 = F
if (drop_over40) {
df <- df[df$ageY<=40,]
}
# create wrapper around stargazer
starviewer <- function(...) {
# make sure stargazer is available
require(stargazer)
# assume text output but check for latex or html
star_format <- "text"
if(knitr::is_latex_output()) {star_format <- "latex"}
if(knitr::is_html_output())  {star_format <- "html"}
# if latex, just run stargazer as usual
if (star_format == "latex") {
stargazer::stargazer(...)
} else {
# if not latex, run stargazer in text / html (or both)
dir <- tempfile()
dir.create(dir)
htmlFile <- file.path(dir, "tempfile.html")
stargazer::stargazer(..., type = star_format, out = htmlFile)
rstudioapi::viewer(htmlFile)
}
}
m.3.2 <- lmrob(skeleton_mk ~ harm_gred*clin + poly(ageY,2) + sex +biom_acq_delta_time, data = df)
summary(m.3.2)
m.4.2 <- lmrob(skeleton_f ~ harm_gred*clin + poly(ageY,2) + sex +biom_acq_delta_time, data = df)
summary(m.4.2)
m.4.3 <- lmrob(skeleton_f ~ harm_gratio*clin + poly(ageY,2) + sex +biom_acq_delta_time, data = df)
summary(m.4.3)
library(latex2exp)
library(ggstatsplot)
library(ggridges)
library(patchwork)
library(ggplot2)
library(plyr)
library(tidyverse)
library(gridExtra)
library(gtable)
library(ggpubr)
library(modelsummary)
library(car)
library(ggcorrplot)
library(ggeffects)
library(broom)
library(multcomp)
library(stargazer)
library(emmeans)
library(gtExtras)
library(ggnewscale)
library(gridExtra)
source("/home/localadmin/PycharmProjects/LausannePsychosisVBA/paper_blood_biom/NicePalettes.R")
source("/home/localadmin/PycharmProjects/LausannePsychosisVBA/paper_blood_biom/paper_plots.R")
CW4 <- c("#2c4a8f",
"#8bc0ff",
"#cf2c27",
"#8e0a04"
)
CW5 <- c("#2c4a8f",
"#8bc0ff",
"#9d9d9d",
"#cf2c27",
"#8e0a04"
)
CW2 <- c("#cf2c27","#8bc0ff")
CWC3 <- c("#cf2c27","#8bc0ff", "#e7e055") # green: #71cf7c, brown: #cf6727, yellow: #e7e055
signif.star <- function(x) {symnum(x, corr = FALSE, na = FALSE, legend = FALSE,
cutpoints = c(0, 1e-04, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns"))}
p.star <- function(x) {paste(prettyNum(x, digits=2), signif.star(x), sep='')}
ep.star <- function(x) {paste(formatC(x, format = "e", digits = 1), signif.star(x), sep='')}
p.cell <- function(a, b) {paste("p=", ep.star(b), sep='')}
sp.cell <- function(a, b) {c(paste('W', a, sep='='), paste("p=", ep.star(b), sep=''))}
control_by_biom <- function(fit_data_res, vars="ageM + sex", from_ctrl=T){
for (ic in seq_along(c('new_gpx', 'new_gred', 'new_gratio'))){
coi <- c('new_gpx', 'new_gred', 'new_gratio')[ic]
dt <- fit_data_res #%>% subset(select=c(coi, strsplit(vars, split = " \\+ ")[[1]], 'group'))
colnames(dt)[colnames(dt)==coi] <-'coi'
# fit model
if (from_ctrl){
dt_ctrl <- dt[dt$clin == 'HC',]
dt_clin <- dt[dt$clin != 'HC',]
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt_ctrl, na.action=na.exclude)
fit_data_res[fit_data_res$clin == 'HC', coi] <- residuals(lm_)
fit_data_res[fit_data_res$clin != 'HC', coi] <- dt_clin['coi'] - predict(lm_, dt_clin)
} else {
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt, na.action=na.exclude)
fit_data_res[, coi] <- residuals(lm_)
}
}
return(fit_data_res)
}
control_by <- function(fit_data_res, vars="ageM + sex", from_ctrl=F, keep_intercept=T){
for (ic in seq_along(skeletons)){
coi <- skeletons[ic]
dt <- fit_data_res #%>% subset(select=c(coi, strsplit(vars, split = " \\+ ")[[1]], 'group'))
colnames(dt)[colnames(dt)==coi] <-'coi'
# fit model
if (from_ctrl){
dt_ctrl <- dt[dt$clin == 'HC',]
dt_clin <- dt[dt$clin != 'HC',]
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt_ctrl, na.action=na.exclude)
fit_data_res[fit_data_res$clin == 'HC', coi] <- residuals(lm_)
fit_data_res[fit_data_res$clin != 'HC', coi] <- dt_clin['coi'] - predict(lm_, dt_clin)
} else {
formul <- paste("coi ~", vars)
lm_ <- lm(formul, data = dt, na.action=na.exclude)
fit_data_res[, coi] <- residuals(lm_)
if (keep_intercept){
fit_data_res[, coi] <- fit_data_res[, coi] + coef(lm_)["(Intercept)"]
}
}
}
return(fit_data_res)
}
skeletons <- c("tbss_rd","tbss_md","tbss_ad","tbss_fa",
"tbss_rk","tbss_mk","tbss_ak","tbss_f",
"tbss_da","tbss_depar","tbss_deperp","tbss_c2")
################################################################################
#       load data
################################################################################
## import data
df <- data.frame(read.csv(file = '/home/localadmin/PycharmProjects/LausannePsychosisAnalysis/longitudinal/SUBSET_4_TBSS_PAPER_resid_df_skeletons_harmonized_noimputation_allscales_newbloodbiom_reader.csv'))
jhu <- read.csv(file = '/home/localadmin/PycharmProjects/LausannePsychosisAnalysis/R_scripts/jhu_labels_for_R.csv')
df <- subset(df, group != 'ARMS') #
## remove EP
df$clin <- df$group != 'CTRL'
df[df$clin == T, 'clin'] <- 'PT'
df[df$clin == F, 'clin'] <- 'HC'
df[df$group == 'CTRL', 'group'] <- 'HC'
df[df$group == 'SCHZ', 'group'] <- 'SZ'
## subset, remove NA
df <- df[df$closest_scan_biom_date=='True',]
#keep only skeletons
roi <- jhu$long_corrected[30]
df <- df %>% subset(label == roi)
df$lowratio = 'High'
df$lowratio[df$harm_gratio < quantile(df$harm_gratio[df$clin=='HC'], na.rm=T)[3]] = 'Low' # 6.639423
df$lowgpx = 'High'
df$lowgpx[df$harm_gpx < quantile(df$harm_gpx[df$clin=='HC'], na.rm=T)[3]] = 'Low'
df$lowgr = 'High'
df$lowgr[df$harm_gred < quantile(df$harm_gred[df$clin=='HC'], na.rm=T)[3]] = 'Low'
df$new_gpx <- df$harm_gpx
df$new_gred <- df$harm_gred
df$new_gratio <- df$harm_gratio
#### REMOVE SPECRO CUVE ####
df <- df[df$reader != "Spectro_cuve",]
df <- df[df$sub != 'F192', ]
###### re-level to male to see better female ######
df$sex <- relevel(as.factor(df$sex), ref='M')
df$clin <- as.factor(df$clin)
###### SUBSET FOR ISMRM #######
ISMRM_subset <- read.csv(file = '/home/localadmin/PycharmProjects/LausannePsychosisVBA/ISMRM24abstract_subset_4_old.csv')
df = (df[df$sub %in% ISMRM_subset$sub & df$ses %in% ISMRM_subset$ses ,])
drop_over40 = F
if (drop_over40) {
df <- df[df$ageY<=40,]
}
# create wrapper around stargazer
starviewer <- function(...) {
# make sure stargazer is available
require(stargazer)
# assume text output but check for latex or html
star_format <- "text"
if(knitr::is_latex_output()) {star_format <- "latex"}
if(knitr::is_html_output())  {star_format <- "html"}
# if latex, just run stargazer as usual
if (star_format == "latex") {
stargazer::stargazer(...)
} else {
# if not latex, run stargazer in text / html (or both)
dir <- tempfile()
dir.create(dir)
htmlFile <- file.path(dir, "tempfile.html")
stargazer::stargazer(..., type = star_format, out = htmlFile)
rstudioapi::viewer(htmlFile)
}
}
m.3.2 <- lm(tbss_mk ~ harm_gred*clin*lowratio + poly(ageY,2) + sex+ biom_acq_delta_time, data = df)
SUMMARY(m.3.2)
summary(m.3.2)
m.3.1 <- lm(tbss_mk ~ harm_gpx*clin*lowratio + poly(ageY,2) + sex+ biom_acq_delta_time, data = df)
summary(m.3.1)
installed_packages <- installed.packages()[, "Package"]
write.table(installed_packages, file = "installed_packages.txt", row.names = FALSE, col.names = FALSE, quote = FALSE)
24*3
setwd("~/PycharmProjects/NormativeModellingPsychosis/gamlss/VBGAMLSS/R")
m <- readRDS("~/urblauna/tpavan1/scripts_tommaso/test_batchtools/.vbgamlss.slurm/.bQCfBFCbek_2024-07-30/.1_ayIYAlblha/.cvstates/.fold.2.model")
m[[1]]
library(gamlss)
library(gamlss2)
m[[1]]
edfAll(m[[1]])
edf(m[[1]])
m[[1]]
summary(m[[1]])
m[[1]]
load("~/urblauna/tpavan1/scripts_tommaso/test_batchtools/.vbgamlss.slurm/.bQCfBFCbek_2024-07-30/.1_ayIYAlblha/.1_ayIYAlblha.local.env")
30*12
40*24
24*20
12*40
12*35
12*30
12*40
